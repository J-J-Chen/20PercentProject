February 5, 2016

Today I set up my development environment. I started to install Microsoft Visual studios, but it didn't finish because the download speed was slow. I started to research what C++ libraries I should use. I'm looking into SDL and using eclipse, but I'm not sure right now. I'm also thinking of using QT, but I'm having problems with some errors. I have tried to look online for solutions, but I couldn't figure it out. QT is also notorius for having a very messy UI, which sort of deviates from the standard c++ style. Some of the example projects won't compile, and I don't know how to fix the errors. So, I probably won't be using QT. So all I did today was research what development  environment I should use for my C++ program. Latter today, I will start to watch tutorials on how to create a GUI for whatever program I decide to use.

February 12, 2016

Today I started to watch tutorials on the basics of C++. I learned the differences between the header files and the source files. The syntax is somewhat different than Java's, but both programming languages share a lot of similiarities. Both languages have ints, floats, etc. However, in C++ you have to worry about pointers. In C++ there is pass by reference and pass by value. Passing by value makes a copy of the variable and does work on the coppied variable. This means that the original variable won't get changed. Passing by reference means that you pass a pointer. The pointer is just the adress to the variable. This is more effiecient, and the original variable will get changed. In java, you don't have to worry about any of this. This makes Java sort of nice, but it also makes it kind of annoying. C++ allows more control over the program, but is more explicite and thus more difficult to master.

February 19, 2016

Today I installed SDL into eclipse. I have started to watch videos and look though the SDL documentation. SDL isn't too hard to use, and it's mostly intuitive. It still follows the syntax of c++, but has more funcionality. and can actually do graphical stuff. At first, I had problems including the library, but I was able to fix it. Eclipse was saying that there was nothing to build, even though I had a .cpp. Turns out mingw isn't the best compiler, but is commonly used with SDL. Once I switched my compiler and set it up with cygwin, it worked perfectly. I have also started to draw out my whole program on paper. I have drawn out all the buttons, spinners, and pictures. Tomorrow I will start to find all the pictures and create my main class. I will continue to watch more tutorials to learn the basics of SDL and C++. 


February 26, 2016

Today I worked on adding basic pictures to my trivia game. I have just started to make the basic layout of the main menu. Right now, I'm considering how I should store the game data. I want to have some type of virtual currency, and I have to look into the different ways to do that. I'm actually sort of familiar with YAML, but xml would be better since it is harder to cheat. But, I don't know how to use xml, so I'll have to see. Next week I'm planning to add my questions for the trivia part of the game, so I'll need to start looking up how to use a file reader in C++. I am having troubles with adding/commiting my files. Whenever I try to track my Microsoft Visual Sudio files, git says that it cannot read the files it doesn't have permission. I have tried changing the project folder from read only to allow writing, but it always changes back.

March 4, 2016

Today I wrote a very basic shader. I have created a vertex shader and a fragment shader. I have linked them inside my code, but it doesn't work. I don't know if it's my graphics that's not making it work, or if I'm not linking it correctly. Whenever I run the program inside Visual Studio, the blue screen I made shows up, but not the red square I drew. However, whenever I run the .exe that Visual Studio generates, no color shows up and my error handling gives me that the shader file could not be opened. 

In addition of creating a shader, I have also created a little practice sprite. Writing sprites are a little bit annoying, because you have to draw everything using triangles. I drew a square, and it required me to draw 6 verticies, which means I have to have an array of 12 point (I need both x and y values for one verticie). 

March 11, 2016

Today I started to learn about buttons. Making them look nice is tricky, but adding them isn't too bad. The main problem is sizing the buttons. Each moniter is a different size, so you can't just make a button a constant a mount of pixels. So instead, you have to use screen coordinates, which have values from -2 to 0. However there is still a problem. Having a rectangluar window will look different if the user decides to resize his window into a rectangluar window. The buttons will allways change size and look weird. I think I know how to figure it out, but I haven't implemented it yet.

Another problem is making the buttons look nice. Right now, they look booring. There are ways to make them look better, but I need to first focus on adding everything else. I will soon start to add a file reader to read out the questions for my trivia game.

March 18, 2016

Today I improved my shaders. I have added a vec4 color input to the shader. This allow me to make some really cool effects. However, I'm not sure how useful it will be to my trivia game. I think that I can use them for my buttons, but I'm not sure. I think that I can create a gradient with the button, and make it look nice. However, at this stage, it isn't important. I'm actually considering putting sdl on pause and learning SFML before I learn SDL. You still code in SFML, but it's easier. You don't have the same control, though, or the satisfaction of completing a hard project. Right now I'm watching through a 65 video tutorial (about 12 hrs. total), and it is hard. Most of the stuff the YouTuber is covering I won't be using. However, I sort of have to watch the whole thing. SDL is so complicated that I can't just watch the parts that I want. For example, the tutorial goes through stuff that I can't find online, like making sure to set my window to have a double buffer, so there won't be any flickering.

April 2, 2016

Today I fixed a bug with my shaders. I accidently mixed up some of my inputs. I put in a 4 color input into my shader, but I only had three colors being outputed. Since my shaders are written in notepad++ (Microsoft Visual Studio can't compile them), I only got a general error from my error class. So, it took me a while to figure out what was wrong. Now I'm going to actually work on my main menu. It will be much harder to do that, considering I don't have any sprites or anything that I can use for a spinner or background.So, I might just have to use the shaders I created and just have a gradient background and a solid color spinner. However, I'm not sure how to draw a circle, so that might be a little bit tricky. However, I might just create my own simple sprite, since it is only a circle.

April 8, 2016

Today I start to work on my input manager class. It is sort of confusing how it grabs input. I can say that if event x happens, do something. However, I'm not sure how to check to see if they clicked on a button or just a random place. One way that I think would work is to use the pixel that they clicked and see if that pixel belongs to a button. However, there probably is an easier way to do this. I'm also haing touble with my class. I'm using a built in method to get the event, and it takes an SDL_Event pointer. So, I pass in an SDL_Event pointer and it complains that I'm passing in an unitialized variable. So, I'm not sure what to do. If I pass the adress (&) of just an SDL_Event and not the pointer, then it works. However, I need the pointer so I can use that event in other classes.

April 15, 2016

Today I started working on creating a button. Right now, I just have a plain color background, which should be changing real soon. I added an OI class, which handles all my mouse and keyboard events. This willl be most helpful when I create my actual game. I put my OI handler in my game loop. I'm not sure that this is very efficent, but I don't know how else to do it. I just have a switch statement that checks to see what is happening. Nothing else really happened this week. I did start my power point, though. I didn't have much time this week to work on my 20 percent project.

April 22, 2016

Today there was a fire drill, so I wan't able to do much with my 20 percent projet today. I did, however, create a button manager, which will determine if a button has been clicked or is enabled. I do have one error that I'm not sure about, though.

Aprill 29, 2106

Just like last week, I didn't really have the opportunity to do much with my 20 percent project. I mostly ended up studying for the AP test. I did, however, start to my my draw class that would decide which buttons and which text should be drawn onto the screen. It's a little tricky, since I have a decent amount of classes that each only contain part of the necessary information to draw the game.
